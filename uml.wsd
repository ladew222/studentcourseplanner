@startuml

class Person {
    -id: int
    -name: str
}

class Student {
    -plans: List[Plan]
    +check_conflicts(): List[Conflict]
}

class Instructor {
    +get_classes(course: Course) : List[ScheduledClass]
}

class Course {
    -id: str
    -name: str
}

abstract class CourseClass {
    -time: Time
    -instructor: Instructor
    -timeslot: TimeSlot
    -capacity: int
    -year: int
    -section: int
    -semester: int
    -planne_attendance: int
}

class ScheduledClass {
    -time: Time
    -instructor: Instructor
    -timeslot: TimeSlot
    -capacity: int
    -year: int
    -section: int
    -semester: int
}

class Plan {
    -student: Student
    -planned_classes: List[PlannedCourse]
}

class PlannedCourse {
    -course: Course
    -year: int
    -semester: int
}

class Time {
    -start_time: datetime
    -end_time: datetime
}

class TimeSlot {
    -days: str
    -time: Time
}

class CourseSchedule {
    -scheduled_classes: Dict[Course, List[ScheduledClass]]
    -missing_classes: Dict[Course, List[PlannedCourse]]
    -conflicts: List[Conflict]
    +add_class(course: Course, scheduled_class: ScheduledClass)
    +check_schedule() : Dict[Course, List[Student]]
    +check_missing() : Dict[Course, List[PlannedCourse]]
}

class Conflict {
    -plan1: Plan
    -plan2: Plan
}

Person <|-- Student
Person <|-- Instructor

CourseClass <|-- ScheduledClass
CourseClass <|-- PlannedCourse

Student "1" *--> "1..*" Plan
Plan "1" *--> "1..*" PlannedCourse

Course "1" *--> "1..*" ScheduledClass
Course "1" *--> "1..*" PlannedCourse

CourseSchedule "1" o--> "1..*" Course
CourseSchedule "1" o--> "1..*" ScheduledClass
CourseSchedule "1" o--> Conflict

@enduml
